name: Firewall Rule Automation

on:
  push:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      TF_LOG: DEBUG  # Enable Terraform debug logs
      PALO_ALTO_HOSTNAME: "10.255.49.67"
      PALO_ALTO_USERNAME: "salmap"
      PALO_ALTO_PASSWORD: "Plum@7890"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install Terraform (for validation)
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.9.0'

      - name: Validate Firewall Rules
        run: python validate_firewall_changes.py security_rules.json

  apply:
    runs-on: ubuntu-latest
    needs: validate
    env:
      TF_LOG: DEBUG  # Enable Terraform debug logs
      PALO_ALTO_HOSTNAME: "10.255.49.67"
      PALO_ALTO_USERNAME: "salmap"
      PALO_ALTO_PASSWORD: "Plum@7890"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.9.0'

      - name: Terraform Init
        run: terraform init

      - name: Test Palo Alto Connectivity
        run: |
          echo "Pinging Palo Alto firewall..."
          ping -c 4 ${{ env.PALO_ALTO_HOSTNAME }}
          echo "Testing API connectivity..."
          curl -k -v https://${{ env.PALO_ALTO_HOSTNAME }}/api/
     

      - name: Terraform Apply
        run: terraform apply -auto-approve
        timeout-minutes: 15  
        env:
          TF_VAR_paloalto_hostname: ${{ env.PALO_ALTO_HOSTNAME }}
          TF_VAR_paloalto_username: ${{ env.PALO_ALTO_USERNAME }}
          TF_VAR_paloalto_password: ${{ env.PALO_ALTO_PASSWORD }}
          TF_LOG: DEBUG
          TF_LOG_PATH: terraform-debug.log  

